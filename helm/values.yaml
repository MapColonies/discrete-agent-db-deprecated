global:
  cloudProvider: {}
  tracing: {}
  metrics: {}
  environment: {}

rasterCommon:
  ca:
    secretName: ''
    path: '/usr/local/share/ca-certificate'
    key: 'ca.crt'
  db:
    host: "localhost"
    name: "raster"
    port: 5432
    sslEnabled: false
    secrets:
      useExternal: false
      externalSecretName: ''

enabled: true
environment: "development"
replicaCount: 1
initialDelaySeconds: 60
nodePort: 30030 #for minikube deployment only
resetOnConfigChange: true

cloudProvider:
  dockerRegistryUrl: "my-registry-url.io"
  flavor: "openshift"
  imagePullSecretName: ""

image:
  repository: "discrete-agent-db"
  tag: "latest"

authentication:  
  ca:
    enabled: false
    useExternal: false
    externalSecretName: ""
  ssl:
    enabled: false
    useExternal: false
    externalSecretName: ""

# ====================================================================================================
# Local certificate files variables
# ====================================================================================================

local:
  certs:
    postgres:
      ca: "certs/postgres/rootCA.crt"
      key: "certs/postgres/avi.key"
      cert: "certs/postgres/avi.crt"

postgresSecret:
  enabled: true
  userName: "postgres"
  password: "postgres"

env:
  port: 80
  targetPort: 8080
  protocol: "TCP"
  openApiFilPath: "./openapi3.yaml"
  logLevel: "warn"
  tracing:
    enabled: false
    url: "http://localhost:55681/v1/trace"
  metrics:
    enabled: false
    url: "http://localhost:55681/v1/metrics"
  db:
    schema: "public"
    logging: false
  
resources:
  enabled: true
  value:
    limits:
      cpu: "100m"
      memory: "128Mi"
    requests:
      cpu: "100m"
      memory: "128Mi"

route:
  enabled: false
  path: /

ingress:
  enabled: false
  path: /
  host: "localhost"
  cors:
    enabled: true
    origin: '*'
